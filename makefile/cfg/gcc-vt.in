# vampirtrace:
# http://tu-dresden.de/die_tu_dresden/zentrale_einrichtungen/zih/forschung/software_werkzeuge_zur_unterstuetzung_von_programmierung_und_optimierung/vampir
# gnu compiler suite
# http://gcc.gnu.org/

CFG_INFO = "Vampirtrace instrumentation using GNU compiller (manual instrumentation)"

CFG_PARTYPES = ""
CFG_PARTYPES += "SEQ  sequential program\n"
CFG_PARTYPES += "PAR  MPI parallel program"

CFG_TARGETS = ""
CFG_TARGETS += "DEBUG    debug version, additional output, several compiler debug options\n"
CFG_TARGETS += "RELEASE  release version, compiler optimizations enabled"

CXX_SEQ = vtcxx -vt:inst manual
CXX_PAR = vtcxx -vt:cxx mpicxx -vt:inst manual
DEPMODE = gcc3

# SEQ
#########################################
# DEBUG
CXXFLAGS_SEQ_DEBUG  = -Wall -Wextra -Weffc++ -g 
LINKFLAGS_SEQ_DEBUG =
#RELEASE
CXXFLAGS_SEQ_RELEASE  = -O2 -g -DNDEBUG
LINKFLAGS_SEQ_RELEASE =

# PAR
#########################################
# DEBUG
CXXFLAGS_PAR_DEBUG  = -Wall -Wextra -Weffc++ -g -DENABLE_MPI
LINKFLAGS_PAR_DEBUG =
# RELEASE
CXXFLAGS_PAR_RELEASE  = -O2 -g -DNDEBUG -DENABLE_MPI 
LINKFLAGS_PAR_RELEASE =

# Vectorization settings:
#########################################
ifeq ($(VECTORIZE_CODE),SSE)
CXXFLAGS_VECTORIZE = -msse3
endif
ifeq ($(VECTORIZE_CODE),AVX)
CXXFLAGS_VECTORIZE = -mavx
endif
ifeq ($(VECTORIZE_CODE),AVX2)
CXXFLAGS_VECTORIZE = -mavx2 -mfma
endif
ifeq ($(VECTORIZE_CODE),KNC_MASK)
$(error gcc does not support KNC)
endif
ifeq ($(VECTORIZE_CODE),KNC_G_S)
$(error gcc does not support KNC)
endif

# On AMD BUlldozer:
ifeq ($(VECTORIZE_CODE),SSEAMD)
CXXFLAGS_VECTORIZE = -msse3 -mfma4 -march=bdver1
endif
ifeq ($(VECTORIZE_CODE),AVXAMD)
CXXFLAGS_VECTORIZE = -mavx -mfma4 -march=bdver1
endif

# OpenMP settings:
#########################################
ifeq ($(OPENMP),1)
FLAGS_OPENMP += -fopenmp
else
  ifeq ($(OPENMP_SIMD),1)
  FLAGS_OPENMP += -fopenmp-simd
  endif
endif