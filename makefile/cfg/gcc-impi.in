# gnu compiler suite
# http://gcc.gnu.org/
# Version: 

CFG_INFO = "GNU Compiler"

CFG_PARTYPES = ""
CFG_PARTYPES += "SEQ  sequential program\n"
CFG_PARTYPES += "PAR  MPI parallel program"

CFG_TARGETS = ""
CFG_TARGETS += "DEBUG    debug version, additional output, several compiler debug options\n"
CFG_TARGETS += "COVERAGE code coverage test version\n"
CFG_TARGETS += "PROFILE  code profiling for gprof version\n"
CFG_TARGETS += "RELEASE  release version, compiler optimizations enabled"

CXX_SEQ = g++
CXX_PAR = mpiicpc
DEPMODE = gcc3

# SEQ
#########################################
# DEBUG
CXXFLAGS_SEQ_DEBUG  = -Wall -Wextra -Weffc++ -g -ggdb -cxx=g++
LINKFLAGS_SEQ_DEBUG =  -cxx=g++
# RELEASE
CXXFLAGS_SEQ_RELEASE  = -O3 -Wall -Werror -DNDEBUG  -cxx=g++
LINKFLAGS_SEQ_RELEASE = -cxx=g++
# COVERAGE
CXXFLAGS_SEQ_COVERAGE  = $(CXXFLAGS_SEQ_RELEASE) --coverage
LINKFLAGS_SEQ_COVERAGE = $(LINKFLAGS_SEQ_RELEASE) --coverage
# COVERAGE
CXXFLAGS_SEQ_PROFILE  = $(CXXFLAGS_SEQ_RELEASE) -pg
LINKFLAGS_SEQ_PROFILE = $(LINKFLAGS_SEQ_RELEASE) -pg

# PAR
#########################################
# DEBUG
CXXFLAGS_PAR_DEBUG  = -Wall -Wextra -Weffc++ -g -ggdb -DENABLE_MPI -cxx=g++
LINKFLAGS_PAR_DEBUG = -cxx=g++
# RELEASE
CXXFLAGS_PAR_RELEASE  = -O3 -Wall -Werror -DNDEBUG -DENABLE_MPI -cxx=g++
LINKFLAGS_PAR_RELEASE = -cxx=g++
# COVERAGE
CXXFLAGS_PAR_COVERAGE  = $(CXXFLAGS_PAR_RELEASE) --coverage
LINKFLAGS_PAR_COVERAGE = $(LINKFLAGS_PAR_RELEASE) --coverage
# COVERAGE
CXXFLAGS_PAR_PROFILE  = $(CXXFLAGS_PAR_RELEASE) -pg
LINKFLAGS_PAR_PROFILE = $(LINKFLAGS_PAR_RELEASE) -pg

# Vectorization settings:
#########################################
ifeq ($(VECTORIZE_CODE),SSE)
CXXFLAGS_VECTORIZE = -msse3
endif
ifeq ($(VECTORIZE_CODE),AVX)
CXXFLAGS_VECTORIZE = -mavx
endif
ifeq ($(VECTORIZE_CODE),AVX2)
CXXFLAGS_VECTORIZE = -mavx2 -mfma
endif
ifeq ($(VECTORIZE_CODE),KNC_MASK)
$(error gcc does not support KNC)
endif
ifeq ($(VECTORIZE_CODE),KNC_G_S)
$(error gcc does not support KNC)
endif

# On AMD BUlldozer:
ifeq ($(VECTORIZE_CODE),SSEAMD)
CXXFLAGS_VECTORIZE = -msse3 -mfma4 -march=bdver1
endif
ifeq ($(VECTORIZE_CODE),AVXAMD)
CXXFLAGS_VECTORIZE = -mavx -mfma4 -march=bdver1
endif